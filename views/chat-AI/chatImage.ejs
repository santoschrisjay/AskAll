<%- include('../partials/header') %>

  <%- include('../partials/features/headerChatAI') %>

    <!-- Team Start -->
    <div class="container-fluid py-5 wow fadeInUp" data-wow-delay="0.1s">
      <div class="container py-5">
        <div class="section-title text-center position-relative pb-3 mb-5 mx-auto" style="max-width: 600px">
          <h5 class="fw-bold text-primary text-uppercase">Need images?</h5>
          <h1 class="mb-0">AI Image Generator</h1>
        </div>
      </div>
      <!-- CONVO BOX HERE -->
      <link rel="stylesheet" href="css/chatAi.css" />

      <div class="container">
        <div class="row clearfix">
          <div class="col-lg-12">
            <div class="card chat-app">
              <div id="plist" class="people-list">
                <div class="input-group">
                  <div class="input-group-prepend">
                  </div>
                  <!-- <input type="text" class="form-control" placeholder="Search..." /> -->
                  <h3>Ai Generator</h3>
                </div>
                <ul class="list-unstyled chat-list mt-2 mb-0">
                  <li class="clearfix" onclick="handleCodePage()">
                    <img src="img/bot-icon.png" alt="avatar" />
                    <div class="about">
                      <div class="name">Code Generator</div>
                    </div>
                  </li>
                  <li class="clearfix" onclick="handleConversationPage()">
                    <img src="img/conversation-icon.png" alt="avatar" />
                    <div class="about">
                      <div class="name">Conversation</div>
                    </div>
                  </li>
                  <li class="clearfix active">
                    <img src="img/image-bot-icon.png" alt="avatar" />
                    <div class="about">
                      <div class="name">Image Generator</div>
                      <div class="status">
                      </div>
                    </div>
                  </li>

                  <li class="clearfix" onclick="handleMusicPage()">
                    <img src="img/music-bot-icon.png" alt="avatar" />
                    <div class="about">
                      <div class="name">Music Generator</div>

                    </div>
                  </li>

                  <li class="clearfix " onclick="handleRantBuddyPage()">
                    <img src="img/rant.png" alt="avatar" />
                    <div class="about">
                      <div class="name">Rant Buddy</div>

                    </div>
                  </li>

                </ul>
              </div>
              <div class="chat">
                <div class="chat-header clearfix">
                  <div class="row">
                    <div class="col-lg-6" style="display: flex;">

                      <img src="img/image-bot-icon.png" alt="avatar" style="width:50px;" />

                      <div class="chat-about" style="display: flex; flex-direction: column;">
                        <h6 class="m-b-0">Image Generator</h6>
                        <small>I can make your words into image</small>
                      </div>
                    </div>

                  </div>
                </div>
                <div class="chat-history" style="margin-top:40px; padding-bottom:50px">
                  <ul class="m-b-0">
                    <li class="clearfix">
                      <div class="message-data text-right">

                        <!-- <img
                      src="https://bootdey.com/img/Content/avatar/avatar7.png"
                      alt="avatar"
                    /> -->
                      </div>
                      <div class="message other-message float-right" id="userChat">
                      </div>
                    </li>
                    <li class="clearfix">
                      <div class="message my-message" style="display:flex; width:fit-content">
                        <span id="botChatLoading"></span>
                        <img src="" alt="" id="botChat" style="width:250px; display:none;">
                      </div>

                    </li>
                  </ul>
                </div>
                <div class="chat-message clearfix">
                  <div class="input-group mb-0">
                    <form id="myForm" style="display:flex; width:100%; gap: 7px;" onsubmit="handleSubmit(event)">

                      <button id="mic" style="border:none; background-color:white;" type="button"> <i
                          class='fas fa-microphone-slash'></i> </button>
                      <textarea type="text" class="form-control" id="textInput" placeholder="Enter text here..."
                        style="width:100%"> </textarea>
                      <button class="input-group-prepend" style="border:none; background-color: white;" type="submit">
                        <span class="input-group-text"><i class="fa fa-send"></i></span>
                      </button>
                    </form>
                    <button id="mic" style="border:none" type="button">Mic</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/openai"></script>
    <script>
      voiceToText = () => {
        let speech = true

        document.getElementById("textInput").value = "";
        window.SpeechRecognition = window.webkitSpeechRecognition

        const recognition = new SpeechRecognition()
        recognition.interimResults = true

        recognition.addEventListener('result', e => {
          const transcript = Array.from(e.results)
            .map(result => result[0])
            .map(result => result.transcript)
            .join('')

          document.getElementById("textInput").value = transcript;
        });

        if (speech == true) {
          recognition.start()
        }
      }

      document.getElementById("mic").addEventListener("click", () => {
        voiceToText()
      })




      function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
      }


      let mic = document.getElementById("mic")

      mic.addEventListener("click", () => {
        sleep(1000)
        window.SpeechRecognition = window.webkitSpeechRecognition

        const recognition = new SpeechRecognition()
        recognition.interimResults = true

        recognition.addEventListener('result', e => {
          const transcript = Array.from(e.results)
            .map(result => result[0])
            .map(result => result.transcript)
            .join('')

          document.getElementById("textInput").value = transcript;
        });


        mic.innerHTML = `<i class='fas fa-microphone'></i>`
        recognition.start()



        recognition.onend = function () {
          mic.innerHTML = `<i class='fas fa-microphone-slash'></i>`;
        }
      });





      function handleSubmit(event) {
        event.preventDefault();
        let isLoading = false;

        let botChat = document.querySelector('#botChat');
        let botChatLoading = document.querySelector('#botChatLoading');
        botChatLoading.innerText = "Loading..."
        botChat.style.display = "none";

        const inputValue = document.getElementById('textInput').value
        document.querySelector('#userChat').innerText = inputValue;
        console.log(inputValue)
        const userMessage = {
          role: "user",
          content: inputValue,
        }

        fetch('/image', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ inputValue }),
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok.');
            }
            return response.json()
          })
          .then(data => {

            return botChat.src = data, botChat.style.display = "block", botChatLoading.innerText = "";



          })
          .catch(error => {

            console.error('Error:', error);
          });


      }
      const handleConversationPage = () => window.location.href = "/chatConversation";
      const handleCodePage = () => window.location.href = "/chatCode";
      const handleMusicPage = () => window.location.href = "/chatMusic";
      const handleRantBuddyPage = () => window.location.href = "/chatRantBuddy";
    </script>
    <!-- Team End -->

    <%- include('../partials/footer') %>